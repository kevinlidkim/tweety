curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash



====================================================

babel-cli babel-core babel-loader babel-preset-es2015 babel-preset-react css-loader file-loader style-loader url-loader webpack webpack-dev-middleware webpack-hot-middleware

================================================

upstream backend  {
  server 192.168.1.14 max_fails=1  fail_timeout=2s;
  server 192.168.1.18 max_fails=1  fail_timeout=2s;
  server 192.168.1.16 max_fails=1  fail_timeout=2s;
  server 192.168.1.17 max_fails=1  fail_timeout=2s;
  server 192.168.1.22 max_fails=1  fail_timeout=2s;
}

server {
  listen  80;
  server_name kevinli4.cse356.compas.cs.stonybrook.edu;
  location / {
    proxy_pass  http://backend;
  }
}

===============================================



db.user.createIndex({email: 1, username: 1}, {unique: true});
db.tweets.createIndex({content: "text", username: 1, timestamp: -1});
db.follows.createIndex({follower: 1, following: 1});

db.users.createIndex({email: 1});
db.users.createIndex({username: 1});

db.users.createIndex({email: 1}, {unique: true});
db.users.createIndex({username: 1}, {unique: true});
db.tweets.createIndex({timestamp: -1});
db.tweets.createIndex({content: "text"});
db.tweets.createIndex({username: 1});
db.tweets.createIndex({parent: 1});
db.follows.createIndex({follower: 1});
db.follows.createIndex({following: 1});

=============================================================


webpack.config.js

module.exports = {
  entry: './src/index.js',
  output: {
    path: './public',
    filename: 'bundle.js'
  },
  module: {
    loaders: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        loader: 'babel-loader',
        query: {
          presets: ['es2015', 'react']
        }
      },
      {test: /(\.css)$/, loaders: ['style', 'css']},
      {test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: 'file'},
      {test: /\.(woff|woff2)$/, loader: 'url?prefix=font/&limit=5000'},
      {test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: 'url?limit=10000&mimetype=application/octet-stream'},
      {test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: 'url?limit=10000&mimetype=image/svg+xml'}
    ]
  }
};

=====================================================

var mongo_uri = 'mongodb://localhost:27017/tweety';
================================================================

sudo nano /etc/nginx/sites-available/default

============================================

127.0.0.1 localhost
192.168.1.14 tweety-1
192.168.1.18 tweety-2
192.168.1.16 tweety-3
192.168.1.17 tweety-4
192.168.1.22 tweety-5
192.168.1.21 database-config
192.168.1.13 database-1
192.168.1.19 database-2
192.168.1.20 database-3

======================================

rs.initiate(
  {
    _id: "config1",
    configsvr: true,
    members: [
      { _id : 0, host : "database-config:27019" }
    ]
  }
)


config1/database-config:27019

sh.addShard( "database-1:27018")
sh.addShard( "database-2:27018")
sh.addShard( "database-3:27018")

sh.enableSharding("tweety")
sh.shardCollection("test_db.test_collection", { "_id": "hashed" } )



==========================================

CREATE KEYSPACE Tweety
WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3};

CREATE TABLE media (
  file_id text PRIMARY KEY,
  content blob,
  mimetype text
);

DROP TABLE media;